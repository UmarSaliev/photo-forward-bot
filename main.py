import logging
import os
import asyncio
from telegram import Update
from telegram.ext import (
    Application,
    CommandHandler,
    ContextTypes,
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("8189283086:AAGR_QF2NuupIZA4G_Fhys_81CU-9-BOWaU")
OWNER_IDS = os.getenv("95293299,784341697")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ–∫–µ–Ω–∞
if not BOT_TOKEN:
    logger.error("‚ùå BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
    exit(1)

# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º OWNER_IDS –≤ —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª
if OWNER_IDS:
    OWNER_IDS = [int(x.strip()) for x in OWNER_IDS.split(",")]
else:
    OWNER_IDS = []

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –Ø Telegram-–±–æ—Ç.")

# –ö–æ–º–∞–Ω–¥–∞ /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "/start ‚Äî –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
        "/help ‚Äî –ø–æ–º–æ—â—å\n"
        "/ping ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤—è–∑—å\n"
        "/status ‚Äî —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞\n"
        "/list ‚Äî —Å–ø–∏—Å–æ–∫ (—Ç–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤)"
    )

# –ö–æ–º–∞–Ω–¥–∞ /ping
async def ping(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üèì Pong!")

# –ö–æ–º–∞–Ω–¥–∞ /status
async def status(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ.")

# –ö–æ–º–∞–Ω–¥–∞ /list (—Ç–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤)
async def list_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id in OWNER_IDS:
        await update.message.reply_text("üìã –í–æ—Ç –≤–∞—à —Å–ø–∏—Å–æ–∫ (–ø—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö).")
    else:
        await update.message.reply_text("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    application = Application.builder().token(BOT_TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("ping", ping))
    application.add_handler(CommandHandler("status", status))
    application.add_handler(CommandHandler("list", list_command))

    logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await application.run_polling()

if __name__ == "__main__":
    asyncio.run(main())
